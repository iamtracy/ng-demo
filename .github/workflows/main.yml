name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['22.x']
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ng_demo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install root dependencies
        run: npm ci

      - name: 📦 Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: 📦 Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: 🔒 Security audit - Root
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: 🔒 Security audit - Client
        working-directory: ./client
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: 🔒 Security audit - Server
        working-directory: ./server
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: 🧹 Lint client code
        working-directory: ./client
        run: npm run lint

      - name: 🧹 Lint server code
        working-directory: ./server
        run: npm run lint

      - name: 🔍 Type check client
        working-directory: ./client
        run: npx tsc --noEmit

      - name: 🔍 Type check server
        working-directory: ./server
        run: npx tsc --noEmit

      - name: 💅 Check Prettier formatting - Client
        working-directory: ./client
        run: npx prettier --check "src/**/*.{ts,html,scss,json}"

      - name: 💅 Check Prettier formatting - Server
        working-directory: ./server
        run: npx prettier --check "src/**/*.{ts,json}"

      - name: 🗄️ Setup test database
        working-directory: ./server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ng_demo_test
        run: |
          npx prisma generate
          npx prisma db push

      - name: 🧪 Run client tests
        working-directory: ./client
        run: npm run test:ci

      - name: 🧪 Run server unit tests
        working-directory: ./server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ng_demo_test
          NODE_ENV: test
          KEYCLOAK_CLIENT_SECRET: test-secret
        run: npm run test

      - name: 🧪 Run server e2e tests
        working-directory: ./server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ng_demo_test
          NODE_ENV: test
          KEYCLOAK_CLIENT_SECRET: test-secret
        run: npm run test:e2e

      - name: 🏗️ Build client
        working-directory: ./client
        run: npm run build

      - name: 🏗️ Build server
        working-directory: ./server
        run: npm run build

      - name: 📊 Generate client coverage
        working-directory: ./client
        run: npm run test:ci
        continue-on-error: true

      - name: 📊 Generate server coverage
        working-directory: ./server
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ng_demo_test
          NODE_ENV: test
          KEYCLOAK_CLIENT_SECRET: test-secret
        run: npm run test:ci
        continue-on-error: true

      - name: 📈 Upload client coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./client/coverage
          flags: client
          name: client-coverage
        continue-on-error: true

      - name: 📈 Upload server coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./server/coverage
          flags: server
          name: server-coverage
        continue-on-error: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: typescript, javascript

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2 
