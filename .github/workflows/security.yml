name: Security Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, 0BSD
          deny-licenses: GPL-2.0, GPL-3.0, LGPL-2.1, LGPL-3.0

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'typescript', 'javascript' ]

    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['22.x']

    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json

      - name: 📦 Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: 📦 Install server dependencies
        working-directory: ./server
        run: npm ci --force

      - name: 🔒 Security audit - Client
        working-directory: ./client
        run: |
          npm audit --audit-level=high --json > client-audit.json || true
          npm audit --audit-level=high

      - name: 🔒 Security audit - Server
        working-directory: ./server
        run: |
          npm audit --audit-level=high --json > server-audit.json || true
          npm audit --audit-level=high

      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: |
            client/client-audit.json
            server/server-audit.json
          retention-days: 30 