# =============================================================================
# üåå The Developer's Guide to the Galaxy - Docker Compose Configuration
# =============================================================================

services:
  # ===========================================================================
  # üóÑÔ∏è Main Application Database (PostgreSQL)
  # ===========================================================================
  postgres:
    image: postgres:16-alpine
    container_name: ng-demo-postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ng_demo_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # ===========================================================================
  # üîê Keycloak Database (PostgreSQL)
  # ===========================================================================
  keycloak-db:
    image: postgres:16-alpine
    container_name: keycloak-postgres
    ports:
      - "${KEYCLOAK_DB_PORT:-5433}:5432"
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME:-keycloak}
      POSTGRES_USER: ${KEYCLOAK_DB_USER:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # ===========================================================================
  # üîê Keycloak Authentication Server
  # ===========================================================================
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    container_name: keycloak
    environment:
      # Database Configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
      
      # Admin Configuration
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD:-admin}
      
      # Application Configuration
      KC_HEALTH_ENABLED: true
      
      # Development Configuration
      KC_DEV: "true"
      KC_FEATURES: "preview"
      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}
      KEYCLOAK_LOGLEVEL: ${KC_LOG_LEVEL:-INFO}
      
      # Hostname Configuration (v2 - modern)
      KC_HOSTNAME: http://localhost:8080
      KC_HOSTNAME_ADMIN: http://localhost:8080
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-config/ng-demo-dev.json:/opt/keycloak/data/import/ng-demo-dev.json
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

# =============================================================================
# üß™ TESTING SERVICES
# =============================================================================

  cypress:
    image: cypress/included:latest
    container_name: ng-demo-cypress
    working_dir: /e2e
    volumes:
      - .:/e2e
    environment:
      - CYPRESS_BASE_URL=http://localhost:3000
      - CYPRESS_API_URL=http://localhost:3000
      - CYPRESS_KEYCLOAK_URL=http://localhost:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"
    network_mode: host
    profiles:
      - testing
    depends_on:
      - keycloak
    command: ["cypress", "run", "--spec", "cypress/e2e/**/*.cy.ts"]

# =============================================================================
# üì¶ Persistent Storage Volumes
# =============================================================================
volumes:
  postgres_data:
  keycloak_postgres_data:

# =============================================================================
# üåê Network Configuration
# =============================================================================
networks:
  app-network:
    driver: bridge